http://guides.rubyonrails.org/caching_with_rails.html

To get started make sure config.action_controller.perform_caching is set to true for your environment. 
This flag is normally set in the corresponding config/environments/*.rb. 
By default, caching is disabled for development and test, and enabled for production.


config.action_controller.perform_caching = true


class GroupsController < ActionController

  before_filter :authenticate, :only => [ :edit, :create ]
  caches_page :index
  caches_action :edit

  def index; end

  def create
    expire_page :action => :index
    expire_action :action => :edit
  end
  
end

You can also use :if (or :unless) to pass a Proc that specifies when the action should be cached. 
Also, you can use :layout => false to cache without layout so that dynamic information in the layout 
such as the name of the logged-in user or the number of items in the cart can be left uncached. 
This feature is available as of Rails 2.2.

You can modify the default action cache path by passing a :cache_path option. 
This will be passed directly to ActionCachePath.path_for. 
This is handy for actions with multiple possible routes that should be cached differently. 
If a block is given, it is called with the current controller instance.


