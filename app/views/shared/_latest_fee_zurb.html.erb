- users = []
- groups = []
- the_groups = Hash.new
- current_user.groups.each {|group| groups << group if is_current_manager_of(group)}
- groups.each do |group|
- group.users.each {|user| users << user}
- end
- groups.each do |group|
- schedules = []
- the_fees = []
- the_payments = []
- single_group = []
- single_group << group
- users.each do |user|
- Schedule.match_participation(group, user, schedules) unless user.is_subscriber_of?(group)
- end
- Fee.debits_credits_items_fees(group.users, single_group, single_group, the_fees)
- Fee.debits_credits_items_fees(group.users, single_group, schedules, the_fees)
- debit_fee = Fee.sum_debit_amount_fee(the_fees)
- Payment.debits_credits_items_payments(group.users, single_group, single_group, the_payments)
- Payment.debits_credits_items_payments(group.users, single_group, schedules, the_payments)
- debit_payment, credit_payment = Payment.sum_debit_amount_payment(the_payments)
- the_total = debit_fee.debit_amount.to_f - (debit_payment.debit_amount.to_f + credit_payment.credit_amount.to_f)
- if the_total > 0.0
- the_groups[group] = the_total
- end
- end
- the_groups.each do |group, the_total|
  .block
    = content_tag 'h3', h(group.name)
    .sidebar-block
      %table.table
        %tr
          %td.no_line{:align => "center"}
            = link_to("#{label_name(:fees)}:&nbsp;&nbsp;&nbsp;&nbsp;#{number_to_currency(the_groups[group])}", due_fees_path(:id => group))
